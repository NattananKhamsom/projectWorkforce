package com.clinicappointment.controller;

import com.clinicappointment.entity.Doctor;
import com.clinicappointment.entity.Patient;
import com.clinicappointment.repository.DoctorRepository;
import com.clinicappointment.repository.PatientRepository;
import jakarta.servlet.http.HttpSession;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
public class LoginController {
    private final PatientRepository patientRepo;
    private final DoctorRepository doctorRepo;

    public LoginController(PatientRepository patientRepo, DoctorRepository doctorRepo) {
        this.patientRepo = patientRepo;
        this.doctorRepo = doctorRepo;
    }

    @GetMapping("/login")
    public String showLogin() {
        return "login"; // ไปหน้า login.html
    }

    @PostMapping("/login")
    public String doLogin(@RequestParam String username,
                          @RequestParam String password,
                          HttpSession session,
                          Model model) {
        // ลองหาจาก Patient ก่อน
        Patient patient = patientRepo.findByUsername(username);
        if (patient != null && patient.getPassword().equals(password)) {
            session.setAttribute("userId", patient.getId());
            session.setAttribute("role", "PATIENT");
            return "redirect:/patient/home";
        }

        // ถ้าไม่ใช่ ลองหา Doctor
        Doctor doctor = doctorRepo.findAll()
                .stream()
                .filter(d -> d.getName().equals(username) && password.equals("1234")) // demo ใช้ password fix
                .findFirst()
                .orElse(null);

        if (doctor != null) {
            session.setAttribute("userId", doctor.getId());
            session.setAttribute("role", "DOCTOR");
            return "redirect:/doctor/home";
        }

        model.addAttribute("error", "Invalid username or password");
        return "login";
    }

    @GetMapping("/logout")
    public String logout(HttpSession session) {
        session.invalidate();
        return "redirect:/login";
    }
}
